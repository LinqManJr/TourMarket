// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourMarket.Context;

namespace TourMarket.Migrations
{
    [DbContext(typeof(MarketContext))]
    [Migration("20191117145958_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TourMarket.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Password");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("TourMarket.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("TourId");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TourMarket.Models.OrderManager", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ManagerId");

                    b.HasKey("OrderId", "ManagerId");

                    b.HasAlternateKey("ManagerId", "OrderId");

                    b.ToTable("OrderManager");
                });

            modelBuilder.Entity("TourMarket.Models.OrderTourist", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("TouristId");

                    b.HasKey("OrderId", "TouristId");

                    b.HasIndex("TouristId");

                    b.ToTable("OrderTourist");
                });

            modelBuilder.Entity("TourMarket.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "India",
                            Price = 250.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Thailand",
                            Price = 300.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Japan",
                            Price = 425.0
                        },
                        new
                        {
                            Id = 4,
                            Name = "China",
                            Price = 350.0
                        });
                });

            modelBuilder.Entity("TourMarket.Models.Tourist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Fio");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Tourists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jWick23@gmail.com",
                            Fio = "John Wick",
                            PhoneNumber = "655587442"
                        },
                        new
                        {
                            Id = 2,
                            Email = "imbatman@gmail.com",
                            Fio = "Bruce Wayne",
                            PhoneNumber = "888888888"
                        },
                        new
                        {
                            Id = 3,
                            Email = "spyda@yahoo.com",
                            Fio = "Peter Parker",
                            PhoneNumber = "615451442"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ironman@gmail.com",
                            Fio = "Thony Start",
                            PhoneNumber = "633331442"
                        });
                });

            modelBuilder.Entity("TourMarket.Models.Order", b =>
                {
                    b.HasOne("TourMarket.Models.Tour", "Tour")
                        .WithMany("Orders")
                        .HasForeignKey("TourId");
                });

            modelBuilder.Entity("TourMarket.Models.OrderManager", b =>
                {
                    b.HasOne("TourMarket.Models.Manager", "Manager")
                        .WithMany("OrderManagers")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TourMarket.Models.Order", "Order")
                        .WithMany("OrderManagers")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TourMarket.Models.OrderTourist", b =>
                {
                    b.HasOne("TourMarket.Models.Order", "Order")
                        .WithMany("OrderTourists")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TourMarket.Models.Tourist", "Tourist")
                        .WithMany("OrderTourists")
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
